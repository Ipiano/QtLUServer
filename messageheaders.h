#ifndef MESSAGEHEADERS_H
#define MESSAGEHEADERS_H

#include "bytestream.h"
#include <QtGlobal>

namespace HEADERS
{

enum class PACKET_HEADER : unsigned char
{
    LEGO_PACKET = 0x53
};

enum class CONNECTION_TYPE : unsigned char
{
    GENERAL = 0x00,
    AUTH,
    CHAT,
    UNKNOWN,
    SERVER,
    CLIENT,
    ENUM_MAX
};

}

namespace PACKET_IDS
{

enum class ANY : unsigned int
{
    VERSION_CONFIRM     = 0x00,
    DISCONNECT_NOTIFY,
    GENERAL_NOTIFY,
    ENUM_MAX
};

enum class CHAT : unsigned int
{
    LOGIN_SESSION_NOTIFY    = 0x00,
    GENERAL_CHAT_MESSAGE,
    PRIVATE_CHAT_MESSAGE,
    USER_CHANNEL_CHAT_MESSAGE,
    WORLD_DISCONNECT_REQUEST,
    WORLD_PROXIMITY_RESPONSE,
    WORLD_PARCEL_RESPONSE,
    ADD_FRIEND_REQUEST,
    ADD_FRIEND_RESPONSE,
    REMOVE_FRIEND,
    GET_FRIENDS_LIST,
    ADD_IGNORE,
    REMOVE_IGNORE,
    GET_IGNORE_LIST,
    TEAM_MISSED_INVITE_CHECK,
    TEAM_INVITE,
    TEAM_INVITE_RESPONSE,
    TEAM_KICK,
    TEAM_LEAVE,
    TEAM_SET_LOOT,
    TEAM_SET_LEADER,
    TEAM_GET_STATUS,
    GUILD_CREATE,
    GUILD_INVITE,
    GUILD_INVITE_RESPONSE,
    GUILD_LEAVE,
    GUILD_KICK,
    GUILD_GET_STATUS,
    GUILD_GET_ALL,
    SHOW_ALL,
    BLUEPRINT_MODERATED,
    BLUEPRINT_MODEL_READY,
    PROPERTY_READY_FOR_APPROVAL,
    PROPERTY_MODERATION_CHANGED,
    PROPERTY_BUILDMODE_CHANGED,
    PROPERTY_BUILDMODE_CHANGED_REPORT,
    MAIL,
    WORLD_INSTANCE_LOCATION_REQUEST,
    REPUTATION_UPDATE,
    CHARACTER_NAME_CHANGE_REQUEST,
    CSR_REQUEST,
    CSR_REPLY,
    GM_KICK,
    GM_ANNOUNCE,
    GM_MUTE,
    ACTIVITY_UPDATE,
    WORLD_ROUTE_PACKET,
    GET_ZONE_POPULATIONS,
    REQUEST_MINIMUM_CHAT_MODE,
    REQUEST_MINIMUM_CHAT_MODE_PRIVATE,
    MATCH_REQUEST,
    UGCMANIFEST_REPORT_MISSING_FILE,
    UGCMANIFEST_REPORT_DONE_FILE,
    UGCMANIFEST_REPORT_DONE_BLUEPRINT,
    UGCC_REQUEST,
    WHO,
    WORLD_PLAYERS_PET_MODERATED_ACKNOWLEDGE,
    ACHIEVEMENT_NOTIFY,
    GM_CLOSE_PRIVATE_CHAT_WINDOW,
    UNEXPECTED_DISCONNECT,
    PLAYER_READY,
    GET_DONATION_TOTAL,
    UPDATE_DONATION,
    PGR_CSR_COMMAND,
    HEARTBEAT_REQUEST_FROM_WORLD,
    UPDATE_FREE_TRIAL_STATUS,
    ENUM_MAX
};

enum class AUTH : unsigned int
{
    LOGIN_REQUEST = 0x00,
    LOGOUT_REQUEST,
    CREAT_NEW_ACCOUNT_REQUEST,
    LEGOINTERFACE_AUTH_RESPONSE,
    SESSIONKEY_RECEIVED_CONFIRM,
    RUNTIME_CONFIG,
    ENUM_MAX
};

enum class CLIENT : unsigned int
{
    CLIENT_VALIDATION = 0x01,
    CLIENT_CHARACTER_LIST_REQUEST,
    CLIENT_CHARACTER_CREATE_REQUEST,
    CLIENT_LOGIN_REQUEST,
    CLIENT_GAME_MSG,
    CLIENT_CHARACTER_DELETE_REQUEST,
    CLIENT_CHARACTER_RENAME_REQUEST,
    CLIENT_HAPPY_FLOWER_MODE_NOTIFY,
    CLIENT_SLASH_RELOAD_MAP,
    CLIENT_SLASH_PUSH_MAP_REQUEST,
    CLIENT_SLASH_PUSH_MAP,
    CLIENT_SLASH_PULL_MAP,
    CLIENT_LOCK_MAP_REQUEST,
    CLIENT_GENERAL_CHAT_MESSAGE,
    CLIENT_HTTP_MONITOR_INFO_REQUEST,
    CLIENT_SLASH_DEBUG_SCRIPTS,
    CLIENT_MODELS_CLEAR,
    CLIENT_EXHIBIT_INSERT_MODEL,
    CLIENT_LEVEL_LOAD_COMPLETE,
    CLIENT_TMP_GUILD_CREATE,
    CLIENT_ROUTE_PACKET,
    CLIENT_POSITION_UPDATE,
    CLIENT_MAIL,
    CLIENT_WORD_CHECK,
    CLIENT_STRING_CHECK,
    CLIENT_GET_PLAYERS_IN_ZONE,
    CLIENT_REQUEST_UGC_MANIFEST_INFO,
    CLIENT_BLUEPRINT_GET_ALL_DATA_REQUEST,
    CLIENT_CANCEL_MAP_QUEUE,
    CLIENT_HANDLE_FUNNESS,
    CLIENT_FAKE_PGR_CSR_MESSAGE,
    CLIENT_REQUEST_FREE_TRIAL_REFRESH,
    CLIENT_GM_SET_FREE_TRIAL_STATUS,
    UGC_DOWNLOAD_FAILED = 0x78,
    ENUM_MAX
};

enum class SERVER : unsigned int
{
    LOGIN_RESPONSE = 0x00,
    LOGOUT_RESPONSE,
    LOAD_STATIC_ZONE,
    CREATE_OBJECT,
    CREATE_CHARACTER,
    CREATE_CHARACTER_EXTENDED,
    CHARACTER_LIST_RESPONSE,
    CHARACTER_CREATE_RESPONSE,
    CHARACTER_RENAME_RESPONSE,
    CHAT_CONNECT_RESPONSE,
    AUTH_ACCOUNT_CREATE_RESPONSE,
    DELETE_CHARACTER_RESPONSE,
    GAME_MSG,
    CONNECT_CHAT,
    TRANSFER_TO_WORLD,
    IMPENDING_RELOAD_NOTIFY,
    MAKE_GM_RESPONSE,
    HTTP_MONITOR_INFO_RESPONSE,
    SLASH_PUSH_MAP_RESPONSE,
    SLASH_PULL_MAP_RESPONSE,
    SLASH_LOCK_MAP_RESPONSE,
    BLUEPRINT_SAVE_RESPONSE,
    BLUEPRINT_LUP_SAVE_RESPONSE,
    BLUEPRINT_LOAD_RESPONSE_ITEMID,
    BLUEPRINT_GET_ALL_DATA_RESPONSE,
    MODEL_INSTANTIATE_RESPONSE,
    DEBUG_OUTPUT,
    ADD_FRIEND_REQUEST,
    ADD_FRIEND_RESPONSE,
    REMOVE_FRIEND_RESPONSE,
    GET_FRIENDS_LIST_RESPONSE,
    UPDATE_FRIEND_NOTIFY,
    ADD_IGNORE_RESPONSE,
    REMOVE_IGNORE_RESPONSE,
    GET_IGNORE_LIST_RESPONSE,
    TEAM_INVITE,
    TEAM_INVITE_INITIAL_RESPONSE,
    GUILD_CREATE_RESPONSE,
    GUILD_GET_STATUS_RESPONSE,
    GUILD_INVITE,
    GUILD_INVITE_INITIAL_RESPONSE,
    GUILD_INVITE_FINAL_RESPONSE,
    GUILD_INVITE_CONFIRM,
    GUILD_ADD_PLAYER,
    GUILD_REMOVE_PLAYER,
    GUILD_LOGIN_LOGOUT,
    GUILD_RANK_CHANGE,
    GUILD_DATA,
    GUILD_STATUS,
    MAIL,
    DB_PROXY_RESULT,
    SHOW_ALL_RESPONSE,
    WHO_RESPONSE,
    SEND_CANNED_TEXT,
    UPDATE_CHARACTER_NAME,
    SET_NETWORK_SIMULATOR,
    INVALID_CHAT_MESSAGE,
    MINIMUM_CHAT_MODE_RESPONSE,
    MINIMUM_CHAT_MODE_RESPONSE_PRIVATE,
    CHAT_MODERATION_STRING,
    UGC_MANIFEST_RESPONSE,
    IN_LOGIN_QUEUE,
    SERVER_STATES,
    GM_CLOSE_TARGET_CHAT_WINDOW,
    GENERAL_TEXT_FOR_LOCALIZATION,
    UPDATE_FREE_TRIAL_STATUS,
    ENUM_MAX
};

template <class T>
void writePacketHeader(quint8 rakId, HEADERS::CONNECTION_TYPE connection, T packetType, ByteStream& stream)
{
    stream.writeNumber(rakId);
    stream.writeNumber((quint16)connection);
    stream.writeNumber((quint32)packetType);
    stream.writeNumber<quint8>(0);
}


}
#endif // MESSAGEHEADERS_H
